alias userSP R0;
userSP=SP;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13]=userSP;
SP=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+11]*512-1;
alias syscallnum R1;
syscallnum=[[PTBR+2*((userSP-5)/512)]*512+(userSP-5)%512];
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=syscallnum;
alias semid R2;
semid=[[PTBR+2*((userSP-4)/512)]*512+(userSP-4)%512];
breakpoint;
if(semid<0 || semid>7 || [[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+11]*512+RESOURCE_TABLE_OFFSET+semid*2]!=SEMAPHORE) then
	[[PTBR+2*((userSP-1)/512)]*512+(userSP-1)%512]=-1;
	SP=userSP;
	[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
	print "lockerror";
	ireturn;
endif;
alias semaphore_table_index R3;
semaphore_table_index=[[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+11]*512+RESOURCE_TABLE_OFFSET+semid*2+1];

if(syscallnum==19) then
	while([SEMAPHORE_TABLE+semaphore_table_index*4]!=-1 && [SEMAPHORE_TABLE+semaphore_table_index*4]!=[SYSTEM_STATUS_TABLE+1]) do
		[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+4]=WAIT_SEMAPHORE;
		[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+5]=semaphore_table_index;
		breakpoint;
		multipush(R0,R1,R2,R3);
		call SCHEDULER;
		multipop(R0,R1,R2,R3);
	endwhile;
	[SEMAPHORE_TABLE+semaphore_table_index*4]=[SYSTEM_STATUS_TABLE+1];
	[[PTBR+2*((userSP-1)/512)]*512+(userSP-1)%512]=0;
endif;
//semunlock
if(syscallnum==20) then
	if([SEMAPHORE_TABLE+semaphore_table_index*4]!=-1 || semid<0 || semid>7) then
		if([SEMAPHORE_TABLE+semaphore_table_index*4]!=[SYSTEM_STATUS_TABLE+1]) then
			[[PTBR+2*((userSP-1)/512)]*512+(userSP-1)%512]=-2;
			SP=userSP;
			[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
			ireturn;
		endif;
		[SEMAPHORE_TABLE+semaphore_table_index*4]=-1;
		alias counter R4;
		counter=0;
		while(counter<16) do
			if([PROCESS_TABLE+counter*16+4]==WAIT_SEMAPHORE && [PROCESS_TABLE+counter*16+5]==semaphore_table_index) then
				[PROCESS_TABLE+counter*16+4]=READY;
				[PROCESS_TABLE+counter*16+5]=-1;
			endif;
			counter=counter+1;
		endwhile;
		[[PTBR+2*((userSP-1)/512)]*512+(userSP-1)%512]=0;
	endif;
	
endif;
SP=userSP;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
breakpoint;
ireturn;
