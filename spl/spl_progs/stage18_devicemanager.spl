alias funcnum R1;
alias currentpid R2;
alias word_add R3;
if(funcnum==3) then
	multipush(R1,R2,R3);
	funcnum=8;
	call MOD_0;
	multipop(R1,R2,R3);
	print R3;
	multipush(R1,R2,R3);
	funcnum=9;
	call MOD_0;
	multipop(R1,R2,R3);
	return;
endif;
if(funcnum==4) then
	multipush(R1,R2,R3);
	funcnum=8;
	breakpoint;
	call  MOD_0;
	breakpoint;
	multipop(R1,R2,R3);
	read;
	[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+4]=WAIT_TERMINAL;
	multipush(R1,R2,R3);
	breakpoint;
	call MOD_5;
	breakpoint;
	multipop(R1,R2,R3);
	R4=[[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+14]+2*(R3/512)]*512+(R3%512);
	[R4]=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+8];
	return;
endif;
if(funcnum==2) then
	multipush(R0,R1,R2,R3,R4);
	R1=3;
	R2=[SYSTEM_STATUS_TABLE+1];
	call RESOURCE_MANAGER;
	multipop(R0,R1,R2,R3,R4);
	[DISK_STATUS_TABLE+1]=0;
	[DISK_STATUS_TABLE+2]=R3;
	[DISK_STATUS_TABLE+3]=R4;
	load(R3,R4);
	[PROCESS_TABLE+currentpid*16+4]=WAIT_DISK;
	call MOD_5;
	return;
endif;
return;
