alias pid R2;
alias funcnum R1;
if(funcnum==2) then
	alias userareapage R3;
	userareapage=[PROCESS_TABLE+pid*16+11];
	multipush(R0,R1,R2,R3);
	funcnum=2;
	pid=userareapage;
	call MEMORY_MANAGER;
	multipop(R0,R1,R2,R3);
	return;
endif;
if(funcnum==3) then
	multipush(R0,R1,R2,R3);
	funcnum=4;
	call PROCESS_MANAGER;
	multipop(R0,R1,R2,R3);
	multipush(R0,R1,R2,R3);
	funcnum=2;
	call PROCESS_MANAGER;
	multipop(R0,R1,R2,R3);
	[PROCESS_TABLE+pid*16+4]=TERMINATED;
	return;
endif;
if(funcnum==4) then
	alias counter R4;
	[PTBR+0]=-1;
	[PTBR+1]="0000";
	[PTBR+2]=-1;
	[PTBR+3]="0000";
	counter=4;
	while(counter<20) do
		if([PTBR+counter+1]=="0100" || [PTBR+counter+1]=="0110") then
			multipush(R0,R1,R2,R3,R4);
			funcnum=2;
			pid=[PTBR+counter];
			call MEMORY_MANAGER;
			multipop(R0,R1,R2,R3,R4);
			[PTBR+counter]=-1;
			[PTBR+counter+1]="0000";
		endif;
		counter=counter+2;
	endwhile;
	counter=2;
	while(counter<10) do
		if(counter==4) then
			counter=8;
		else
			if([DISK_MAP_TABLE+pid*10+counter]!=-1) then
				multipush(R0,R1,R2,R3,R4);
				funcnum=4;
				R2=[DISK_MAP_TABLE+pid*10+counter];
				call MEMORY_MANAGER;
				multipop(R0,R1,R2,R3,R4);
				[DISK_MAP_TABLE+pid*10+counter]=-1;
			endif;
		counter=counter+1;
		endif;
	endwhile;
	return;
endif;
return;
