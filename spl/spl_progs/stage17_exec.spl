alias userSP R0;
userSP=SP;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13]=SP;
SP=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+11]*512-1;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=9;
alias filename R1;
filename=[[PTBR+2*((userSP-4)/512)]*512+(userSP-4)%512];
alias counter R2;
counter=0;
while(counter<60 && filename!=[INODE_TABLE+(counter)*16+1]) do
counter=counter+1;
endwhile;
if(counter>=60) then
[[PTBR+2*((userSP-1)/512)]*512+(userSP-1)%512]=-1;
SP=userSP;
ireturn;
endif;
alias inode_index R3;
inode_index=counter;
breakpoint;
multipush(R0,R1,R2,R3);
counter=[SYSTEM_STATUS_TABLE+1];
filename=3;
call PROCESS_MANAGER;
multipop(R0,R1,R2,R3);
breakpoint;
//7th step
[MEMORY_FREE_LIST+[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+11]]=[MEMORY_FREE_LIST+[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+11]]+1;
[SYSTEM_STATUS_TABLE+2]=[SYSTEM_STATUS_TABLE+2]-1;
SP=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+11]*512-1;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+4]=RUNNING;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+7]=inode_index;

[PTBR+0]=63;
[PTBR+1]="0100";
[PTBR+2]=64;
[PTBR+3]="0100";

counter=4;
while(counter<20) do
	if(counter==8) then
	counter=16;
	else
	multipush(R0,R1,R2,R3);
	filename=1;
	call MEMORY_MANAGER;
	R11=R0;
	multipop(R0,R1,R2,R3);
	[PTBR+counter]=R11;
	[PTBR+counter+1]="0110";
	counter=counter+2;
	endif;
endwhile;
counter=0;
alias block R5;
block=0;
alias numblocks R10;
numblocks=(([INODE_TABLE+16*inode_index+2]-1)/512)+1;
while(block<4) do
	if(block<numblocks) then
	multipush(R0,R1,R2,R3,R4,R5);
	filename=1;
	call MEMORY_MANAGER;
	R11=R0;
	multipop(R0,R1,R2,R3,R4,R5);
	[PTBR+8+counter]=R11;
	[PTBR+9+counter]="0100";
	breakpoint;
	loadi([PTBR+8+counter],[INODE_TABLE+inode_index*16+8+block]);
	else 
	[PTBR+8+counter]=-1;
	[PTBR+9+counter]="0000";
	endif;
	counter=counter+2;
	block=block+1;
endwhile;
SP=8*512;
[[PTBR+16]*512]=[[PTBR+8]*512+1];
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
ireturn;
