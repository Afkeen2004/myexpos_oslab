alias userSP R0;
userSP=SP;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13]=userSP;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=11;
SP=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+11]*512-1;
alias syscallnum R1;
syscallnum=[[PTBR+2*((userSP-5)/512)]*512+(userSP-5)%512];
if(syscallnum==13) then
	alias pid R2;
	pid=[[PTBR+2*((userSP-4)/512)]*512+(userSP-4)%512];
	if(pid<0 || pid>=16 || pid==[SYSTEM_STATUS_TABLE+1] || [PROCESS_TABLE+pid*16+4]==TERMINATED) then
		[[PTBR+2*((userSP-1)/512)]*512+(userSP-1)%512]=-1;
		SP=userSP;
		[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
		ireturn;
	else
		[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+4]=WAIT_PROCESS;
		[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+5]=pid;
		multipush(R0,R1,R2);
		call SCHEDULER;
		multipop(R0,R1,R2);
		SP=userSP;
		[[PTBR+2*((userSP-1)/512)]*512+(userSP-1)%512]=0;
		[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
		ireturn;
	endif;
	
endif;
if(syscallnum==14) then
	alias counter R2;
	counter=0;
	while(counter<16) do
		if([PROCESS_TABLE+counter*16+4]==WAIT_PROCESS && [PROCESS_TABLE+counter*16+5]==[SYSTEM_STATUS_TABLE+1]) then
			[PROCESS_TABLE+counter*16+4]=READY;
			[PROCESS_TABLE+counter*16+5]=-1;
		endif;
		counter=counter+1;
	endwhile;
	SP=userSP;
	[[PTBR+2*((userSP-1)/512)]*512+(userSP-1)%512]=0;
	[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
	ireturn;
endif;
if(syscallnum==11) then
	[[PTBR+2*((userSP-1)/512)]*512+(userSP-1)%512]=[SYSTEM_STATUS_TABLE+1];
	SP=userSP;
	[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
	ireturn;
endif;	
if(syscallnum==12) then
	[[PTBR+2*((userSP-1)/512)]*512+(userSP-1)%512]=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+2];
	SP=userSP;
	[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
	ireturn;
endif;
